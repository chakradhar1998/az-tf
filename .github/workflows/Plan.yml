
name: 'Terraform'

run-name: PAYG-${{ github.sha }}-${{ github.actor }}


on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VERSION: 1.12.0


jobs:
  plan:
    name: 'Plan'

    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
    
    # - name: Terraform Workspace
    #   run: terraform workspace select PAYG



    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    - name: Debug Env
      run: |
        echo "ARM_CLIENT_ID is set: ${ARM_CLIENT_ID:+yes}"
        echo "ARM_CLIENT_SECRET is set: ${ARM_CLIENT_SECRET:+yes}"
        echo "ARM_SUBSCRIPTION_ID is set: ${ARM_SUBSCRIPTION_ID:+yes}"
        echo "ARM_TENANT_ID is set: ${ARM_TENANT_ID:+yes}"

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan #-input=false -var-file terraform.tfvars

  apply:
    needs: plan 
    name: 'Apply'
    runs-on: ubuntu-latest
    
        # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v4
    
        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
    
    
        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          run: terraform init
        
        # - name: Terraform Workspace
        #   run: terraform workspace select PAYG
    
    
    
        # Checks that all Terraform configuration files adhere to a canonical format
        - name: Terraform Format
          run: terraform fmt -check
          continue-on-error: true
    
        - name: Debug Env
          run: |
            echo "ARM_CLIENT_ID is set: ${ARM_CLIENT_ID:+yes}"
            echo "ARM_CLIENT_SECRET is set: ${ARM_CLIENT_SECRET:+yes}"
            echo "ARM_SUBSCRIPTION_ID is set: ${ARM_SUBSCRIPTION_ID:+yes}"
            echo "ARM_TENANT_ID is set: ${ARM_TENANT_ID:+yes}"
    
        # Generates an execution plan for Terraform
        - name: Terraform Apply
          run: terraform apply -input=false -auto-approve #-var-file terraform.tfvars
    
    